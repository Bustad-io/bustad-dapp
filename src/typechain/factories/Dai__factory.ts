/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dai, DaiInterface } from "../Dai";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200234b3803806200234b833981810160405281019062000037919062000191565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600e81526020017f44616920537461626c65636f696e000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200012e95949392919062000234565b604051602081830303815290604052805190602001206005819055505062000291565b600080fd5b6000819050919050565b6200016b8162000156565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b600060208284031215620001aa57620001a962000151565b5b6000620001ba848285016200017a565b91505092915050565b6000819050919050565b620001d881620001c3565b82525050565b620001e98162000156565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021c82620001ef565b9050919050565b6200022e816200020f565b82525050565b600060a0820190506200024b6000830188620001cd565b6200025a6020830187620001cd565b620002696040830186620001cd565b620002786060830185620001de565b62000287608083018462000223565b9695505050505050565b6120aa80620002a16000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb14610365578063b753a98c14610395578063bb35783b146103b1578063bf353dbb146103cd578063dd62ed3e146103fd578063f2d5d56b1461042d57610142565b80637ecebe00146102c35780638fcbaf0c146102f357806395d89b411461030f5780639c52a7f11461032d5780639dc29fac1461034957610142565b8063313ce5671161010a578063313ce567146102015780633644e5151461021f57806340c10f191461023d57806354fd4d501461025957806365fae35e1461027757806370a082311461029357610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b357806330adf81f146101e3575b600080fd5b61014f610449565b60405161015c919061175a565b60405180910390f35b61017f600480360381019061017a9190611815565b610482565b60405161018c9190611870565b60405180910390f35b61019d610574565b6040516101aa919061189a565b60405180910390f35b6101cd60048036038101906101c891906118b5565b61057a565b6040516101da9190611870565b60405180910390f35b6101eb610a29565b6040516101f89190611921565b60405180910390f35b610209610a50565b6040516102169190611958565b60405180910390f35b610227610a55565b6040516102349190611921565b60405180910390f35b61025760048036038101906102529190611815565b610a5b565b005b610261610be4565b60405161026e919061175a565b60405180910390f35b610291600480360381019061028c9190611973565b610c1d565b005b6102ad60048036038101906102a89190611973565b610ce5565b6040516102ba919061189a565b60405180910390f35b6102dd60048036038101906102d89190611973565b610cfd565b6040516102ea919061189a565b60405180910390f35b61030d60048036038101906103089190611a24565b610d15565b005b6103176110ca565b604051610324919061175a565b60405180910390f35b61034760048036038101906103429190611973565b611103565b005b610363600480360381019061035e9190611815565b6111cb565b005b61037f600480360381019061037a9190611815565b6115f8565b60405161038c9190611870565b60405180910390f35b6103af60048036038101906103aa9190611815565b61160d565b005b6103cb60048036038101906103c691906118b5565b61161d565b005b6103e760048036038101906103e29190611973565b61162e565b6040516103f4919061189a565b60405180910390f35b61041760048036038101906104129190611ada565b611646565b604051610424919061189a565b60405180910390f35b61044760048036038101906104429190611815565b61166b565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610562919061189a565b60405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590611b66565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156106d657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108a15781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561079a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079190611bd2565b60405180910390fd5b610820600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361167b565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6108ea600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361167b565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610976600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361169e565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a16919061189a565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad390611c3e565b60405180910390fd5b610b25600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261169e565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b746001548261169e565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bd8919061189a565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9590611c3e565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001610d5896959493929190611c6d565b60405160208183030381529060405280519060200120604051602001610d7f929190611d46565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfe90611dc9565b60405180910390fd5b60018185858560405160008152602001604052604051610e2a9493929190611de9565b6020604051602081039080840390855afa158015610e4c573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610ec3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eba90611e7a565b60405180910390fd5b6000861480610ed25750854211155b610f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0890611ee6565b60405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610f6190611f35565b919050558714610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90611fca565b60405180910390fd5b600085610fb4576000610fd6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110b6919061189a565b60405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117b90611c3e565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124490611b66565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561132557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156114f05780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156113e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e090611bd2565b60405180910390fd5b61146f600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261167b565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611539600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261167b565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115886001548261167b565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115ec919061189a565b60405180910390a35050565b600061160533848461057a565b905092915050565b61161833838361057a565b505050565b61162883838361057a565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b61167682338361057a565b505050565b600082828461168a9190611fea565b915081111561169857600080fd5b92915050565b60008282846116ad919061201e565b91508110156116bb57600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116fb5780820151818401526020810190506116e0565b8381111561170a576000848401525b50505050565b6000601f19601f8301169050919050565b600061172c826116c1565b61173681856116cc565b93506117468185602086016116dd565b61174f81611710565b840191505092915050565b600060208201905081810360008301526117748184611721565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117ac82611781565b9050919050565b6117bc816117a1565b81146117c757600080fd5b50565b6000813590506117d9816117b3565b92915050565b6000819050919050565b6117f2816117df565b81146117fd57600080fd5b50565b60008135905061180f816117e9565b92915050565b6000806040838503121561182c5761182b61177c565b5b600061183a858286016117ca565b925050602061184b85828601611800565b9150509250929050565b60008115159050919050565b61186a81611855565b82525050565b60006020820190506118856000830184611861565b92915050565b611894816117df565b82525050565b60006020820190506118af600083018461188b565b92915050565b6000806000606084860312156118ce576118cd61177c565b5b60006118dc868287016117ca565b93505060206118ed868287016117ca565b92505060406118fe86828701611800565b9150509250925092565b6000819050919050565b61191b81611908565b82525050565b60006020820190506119366000830184611912565b92915050565b600060ff82169050919050565b6119528161193c565b82525050565b600060208201905061196d6000830184611949565b92915050565b6000602082840312156119895761198861177c565b5b6000611997848285016117ca565b91505092915050565b6119a981611855565b81146119b457600080fd5b50565b6000813590506119c6816119a0565b92915050565b6119d58161193c565b81146119e057600080fd5b50565b6000813590506119f2816119cc565b92915050565b611a0181611908565b8114611a0c57600080fd5b50565b600081359050611a1e816119f8565b92915050565b600080600080600080600080610100898b031215611a4557611a4461177c565b5b6000611a538b828c016117ca565b9850506020611a648b828c016117ca565b9750506040611a758b828c01611800565b9650506060611a868b828c01611800565b9550506080611a978b828c016119b7565b94505060a0611aa88b828c016119e3565b93505060c0611ab98b828c01611a0f565b92505060e0611aca8b828c01611a0f565b9150509295985092959890939650565b60008060408385031215611af157611af061177c565b5b6000611aff858286016117ca565b9250506020611b10858286016117ca565b9150509250929050565b7f4461692f696e73756666696369656e742d62616c616e63650000000000000000600082015250565b6000611b506018836116cc565b9150611b5b82611b1a565b602082019050919050565b60006020820190508181036000830152611b7f81611b43565b9050919050565b7f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000600082015250565b6000611bbc601a836116cc565b9150611bc782611b86565b602082019050919050565b60006020820190508181036000830152611beb81611baf565b9050919050565b7f4461692f6e6f742d617574686f72697a65640000000000000000000000000000600082015250565b6000611c286012836116cc565b9150611c3382611bf2565b602082019050919050565b60006020820190508181036000830152611c5781611c1b565b9050919050565b611c67816117a1565b82525050565b600060c082019050611c826000830189611912565b611c8f6020830188611c5e565b611c9c6040830187611c5e565b611ca9606083018661188b565b611cb6608083018561188b565b611cc360a0830184611861565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611d0f600283611cce565b9150611d1a82611cd9565b600282019050919050565b6000819050919050565b611d40611d3b82611908565b611d25565b82525050565b6000611d5182611d02565b9150611d5d8285611d2f565b602082019150611d6d8284611d2f565b6020820191508190509392505050565b7f4461692f696e76616c69642d616464726573732d300000000000000000000000600082015250565b6000611db36015836116cc565b9150611dbe82611d7d565b602082019050919050565b60006020820190508181036000830152611de281611da6565b9050919050565b6000608082019050611dfe6000830187611912565b611e0b6020830186611949565b611e186040830185611912565b611e256060830184611912565b95945050505050565b7f4461692f696e76616c69642d7065726d69740000000000000000000000000000600082015250565b6000611e646012836116cc565b9150611e6f82611e2e565b602082019050919050565b60006020820190508181036000830152611e9381611e57565b9050919050565b7f4461692f7065726d69742d657870697265640000000000000000000000000000600082015250565b6000611ed06012836116cc565b9150611edb82611e9a565b602082019050919050565b60006020820190508181036000830152611eff81611ec3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f40826117df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f7357611f72611f06565b5b600182019050919050565b7f4461692f696e76616c69642d6e6f6e6365000000000000000000000000000000600082015250565b6000611fb46011836116cc565b9150611fbf82611f7e565b602082019050919050565b60006020820190508181036000830152611fe381611fa7565b9050919050565b6000611ff5826117df565b9150612000836117df565b92508282101561201357612012611f06565b5b828203905092915050565b6000612029826117df565b9150612034836117df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561206957612068611f06565b5b82820190509291505056fea26469706673582212200caf0548c3b7f55d223376fe8fbd85afc4da56606a2ec3192180f12e2f484c7a64736f6c63430008090033";

export class Dai__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dai> {
    return super.deploy(chainId_, overrides || {}) as Promise<Dai>;
  }
  getDeployTransaction(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(chainId_, overrides || {});
  }
  attach(address: string): Dai {
    return super.attach(address) as Dai;
  }
  connect(signer: Signer): Dai__factory {
    return super.connect(signer) as Dai__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaiInterface {
    return new utils.Interface(_abi) as DaiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dai {
    return new Contract(address, _abi, signerOrProvider) as Dai;
  }
}
