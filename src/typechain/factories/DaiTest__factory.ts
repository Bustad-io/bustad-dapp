/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DaiTest, DaiTestInterface } from "../DaiTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022ca380380620022ca833981810160405281019062000037919062000191565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600e81526020017f44616920537461626c65636f696e000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200012e95949392919062000234565b604051602081830303815290604052805190602001206005819055505062000291565b600080fd5b6000819050919050565b6200016b8162000156565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b600060208284031215620001aa57620001a962000151565b5b6000620001ba848285016200017a565b91505092915050565b6000819050919050565b620001d881620001c3565b82525050565b620001e98162000156565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021c82620001ef565b9050919050565b6200022e816200020f565b82525050565b600060a0820190506200024b6000830188620001cd565b6200025a6020830187620001cd565b620002696040830186620001cd565b620002786060830185620001de565b62000287608083018462000223565b9695505050505050565b61202980620002a16000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063a9059cbb1161007c578063a9059cbb14610365578063b753a98c14610395578063bb35783b146103b1578063bf353dbb146103cd578063dd62ed3e146103fd578063f2d5d56b1461042d57610142565b80637ecebe00146102c35780638fcbaf0c146102f357806395d89b411461030f5780639c52a7f11461032d5780639dc29fac1461034957610142565b8063313ce5671161010a578063313ce567146102015780633644e5151461021f57806340c10f191461023d57806354fd4d501461025957806365fae35e1461027757806370a082311461029357610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b357806330adf81f146101e3575b600080fd5b61014f610449565b60405161015c91906116d9565b60405180910390f35b61017f600480360381019061017a9190611794565b610482565b60405161018c91906117ef565b60405180910390f35b61019d610574565b6040516101aa9190611819565b60405180910390f35b6101cd60048036038101906101c89190611834565b61057a565b6040516101da91906117ef565b60405180910390f35b6101eb610a29565b6040516101f891906118a0565b60405180910390f35b610209610a50565b60405161021691906118d7565b60405180910390f35b610227610a55565b60405161023491906118a0565b60405180910390f35b61025760048036038101906102529190611794565b610a5b565b005b610261610b63565b60405161026e91906116d9565b60405180910390f35b610291600480360381019061028c91906118f2565b610b9c565b005b6102ad60048036038101906102a891906118f2565b610c64565b6040516102ba9190611819565b60405180910390f35b6102dd60048036038101906102d891906118f2565b610c7c565b6040516102ea9190611819565b60405180910390f35b61030d600480360381019061030891906119a3565b610c94565b005b610317611049565b60405161032491906116d9565b60405180910390f35b610347600480360381019061034291906118f2565b611082565b005b610363600480360381019061035e9190611794565b61114a565b005b61037f600480360381019061037a9190611794565b611577565b60405161038c91906117ef565b60405180910390f35b6103af60048036038101906103aa9190611794565b61158c565b005b6103cb60048036038101906103c69190611834565b61159c565b005b6103e760048036038101906103e291906118f2565b6115ad565b6040516103f49190611819565b60405180910390f35b61041760048036038101906104129190611a59565b6115c5565b6040516104249190611819565b60405180910390f35b61044760048036038101906104429190611794565b6115ea565b005b6040518060400160405280600e81526020017f44616920537461626c65636f696e00000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105629190611819565b60405180910390a36001905092915050565b60015481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590611ae5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156106d657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108a15781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561079a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079190611b51565b60405180910390fd5b610820600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836115fa565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6108ea600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836115fa565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610976600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361161d565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a169190611819565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60055481565b610aa4600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261161d565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af36001548261161d565b6001819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b579190611819565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1490611bbd565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60026020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b60006005547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001610cd796959493929190611bec565b60405160208183030381529060405280519060200120604051602001610cfe929190611cc5565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611d48565b60405180910390fd5b60018185858560405160008152602001604052604051610da99493929190611d68565b6020604051602081039080840390855afa158015610dcb573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3990611df9565b60405180910390fd5b6000861480610e515750854211155b610e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8790611e65565b60405180910390fd5b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610ee090611eb4565b919050558714610f25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1c90611f49565b60405180910390fd5b600085610f33576000610f55565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110359190611819565b60405180910390a350505050505050505050565b6040518060400160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525081565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa90611bbd565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390611ae5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156112a457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1561146f5780600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f90611b51565b60405180910390fd5b6113ee600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826115fa565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6114b8600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826115fa565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611507600154826115fa565b600181905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161156b9190611819565b60405180910390a35050565b600061158433848461057a565b905092915050565b61159733838361057a565b505050565b6115a783838361057a565b50505050565b60006020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b6115f582338361057a565b505050565b60008282846116099190611f69565b915081111561161757600080fd5b92915050565b600082828461162c9190611f9d565b915081101561163a57600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561167a57808201518184015260208101905061165f565b83811115611689576000848401525b50505050565b6000601f19601f8301169050919050565b60006116ab82611640565b6116b5818561164b565b93506116c581856020860161165c565b6116ce8161168f565b840191505092915050565b600060208201905081810360008301526116f381846116a0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061172b82611700565b9050919050565b61173b81611720565b811461174657600080fd5b50565b60008135905061175881611732565b92915050565b6000819050919050565b6117718161175e565b811461177c57600080fd5b50565b60008135905061178e81611768565b92915050565b600080604083850312156117ab576117aa6116fb565b5b60006117b985828601611749565b92505060206117ca8582860161177f565b9150509250929050565b60008115159050919050565b6117e9816117d4565b82525050565b600060208201905061180460008301846117e0565b92915050565b6118138161175e565b82525050565b600060208201905061182e600083018461180a565b92915050565b60008060006060848603121561184d5761184c6116fb565b5b600061185b86828701611749565b935050602061186c86828701611749565b925050604061187d8682870161177f565b9150509250925092565b6000819050919050565b61189a81611887565b82525050565b60006020820190506118b56000830184611891565b92915050565b600060ff82169050919050565b6118d1816118bb565b82525050565b60006020820190506118ec60008301846118c8565b92915050565b600060208284031215611908576119076116fb565b5b600061191684828501611749565b91505092915050565b611928816117d4565b811461193357600080fd5b50565b6000813590506119458161191f565b92915050565b611954816118bb565b811461195f57600080fd5b50565b6000813590506119718161194b565b92915050565b61198081611887565b811461198b57600080fd5b50565b60008135905061199d81611977565b92915050565b600080600080600080600080610100898b0312156119c4576119c36116fb565b5b60006119d28b828c01611749565b98505060206119e38b828c01611749565b97505060406119f48b828c0161177f565b9650506060611a058b828c0161177f565b9550506080611a168b828c01611936565b94505060a0611a278b828c01611962565b93505060c0611a388b828c0161198e565b92505060e0611a498b828c0161198e565b9150509295985092959890939650565b60008060408385031215611a7057611a6f6116fb565b5b6000611a7e85828601611749565b9250506020611a8f85828601611749565b9150509250929050565b7f4461692f696e73756666696369656e742d62616c616e63650000000000000000600082015250565b6000611acf60188361164b565b9150611ada82611a99565b602082019050919050565b60006020820190508181036000830152611afe81611ac2565b9050919050565b7f4461692f696e73756666696369656e742d616c6c6f77616e6365000000000000600082015250565b6000611b3b601a8361164b565b9150611b4682611b05565b602082019050919050565b60006020820190508181036000830152611b6a81611b2e565b9050919050565b7f4461692f6e6f742d617574686f72697a65640000000000000000000000000000600082015250565b6000611ba760128361164b565b9150611bb282611b71565b602082019050919050565b60006020820190508181036000830152611bd681611b9a565b9050919050565b611be681611720565b82525050565b600060c082019050611c016000830189611891565b611c0e6020830188611bdd565b611c1b6040830187611bdd565b611c28606083018661180a565b611c35608083018561180a565b611c4260a08301846117e0565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611c8e600283611c4d565b9150611c9982611c58565b600282019050919050565b6000819050919050565b611cbf611cba82611887565b611ca4565b82525050565b6000611cd082611c81565b9150611cdc8285611cae565b602082019150611cec8284611cae565b6020820191508190509392505050565b7f4461692f696e76616c69642d616464726573732d300000000000000000000000600082015250565b6000611d3260158361164b565b9150611d3d82611cfc565b602082019050919050565b60006020820190508181036000830152611d6181611d25565b9050919050565b6000608082019050611d7d6000830187611891565b611d8a60208301866118c8565b611d976040830185611891565b611da46060830184611891565b95945050505050565b7f4461692f696e76616c69642d7065726d69740000000000000000000000000000600082015250565b6000611de360128361164b565b9150611dee82611dad565b602082019050919050565b60006020820190508181036000830152611e1281611dd6565b9050919050565b7f4461692f7065726d69742d657870697265640000000000000000000000000000600082015250565b6000611e4f60128361164b565b9150611e5a82611e19565b602082019050919050565b60006020820190508181036000830152611e7e81611e42565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ebf8261175e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ef257611ef1611e85565b5b600182019050919050565b7f4461692f696e76616c69642d6e6f6e6365000000000000000000000000000000600082015250565b6000611f3360118361164b565b9150611f3e82611efd565b602082019050919050565b60006020820190508181036000830152611f6281611f26565b9050919050565b6000611f748261175e565b9150611f7f8361175e565b925082821015611f9257611f91611e85565b5b828203905092915050565b6000611fa88261175e565b9150611fb38361175e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fe857611fe7611e85565b5b82820190509291505056fea26469706673582212206cd828f2d42bd47de4fa0f7d80d46f10c84a4a45e7413b2b2ab056e44e91a18164736f6c63430008090033";

export class DaiTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DaiTest> {
    return super.deploy(chainId_, overrides || {}) as Promise<DaiTest>;
  }
  getDeployTransaction(
    chainId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(chainId_, overrides || {});
  }
  attach(address: string): DaiTest {
    return super.attach(address) as DaiTest;
  }
  connect(signer: Signer): DaiTest__factory {
    return super.connect(signer) as DaiTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaiTestInterface {
    return new utils.Interface(_abi) as DaiTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DaiTest {
    return new Contract(address, _abi, signerOrProvider) as DaiTest;
  }
}
