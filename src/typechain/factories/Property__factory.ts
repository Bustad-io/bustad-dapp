/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Property, PropertyInterface } from "../Property";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "cadastralNumber",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "estimatedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purchaseDate",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "shareOfPropertyInPct",
        type: "uint8",
      },
    ],
    name: "PropertyPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "soldAmount",
        type: "uint256",
      },
    ],
    name: "PropertySold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "Id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "cadastralNumber",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "purchaseDate",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "estimatedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "soldAmount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "shareOfPropertyInPct",
            type: "uint8",
          },
          {
            internalType: "enum Property.PropertyStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct Property.PurchasedProperty",
        name: "_prop",
        type: "tuple",
      },
    ],
    name: "addActiveProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getProperty",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "Id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "cadastralNumber",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "purchaseDate",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "estimatedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "soldAmount",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "shareOfPropertyInPct",
            type: "uint8",
          },
          {
            internalType: "enum Property.PropertyStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct Property.PurchasedProperty",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "propertyList",
    outputs: [
      {
        internalType: "bytes32",
        name: "Id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "cadastralNumber",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "purchaseDate",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "estimatedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "purchaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "soldAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "shareOfPropertyInPct",
        type: "uint8",
      },
      {
        internalType: "enum Property.PropertyStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "removeProperty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setPropertyAsSold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class Property__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Property> {
    return super.deploy(overrides || {}) as Promise<Property>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Property {
    return super.attach(address) as Property;
  }
  connect(signer: Signer): Property__factory {
    return super.connect(signer) as Property__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropertyInterface {
    return new utils.Interface(_abi) as PropertyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Property {
    return new Contract(address, _abi, signerOrProvider) as Property;
  }
}
